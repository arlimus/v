#!/usr/bin/env ruby

require "trollop"
require "mime-helpers"
require "zlog"

opts = Trollop::options do
  opt :pretend, "Pretend, don't execute"
  opt :verbose, "Let me know what is happening."
  opt :debug, "Give me everything."
end

Zlog::level = Zlog::VERBOSE if opts[:verbose]
Zlog::level = Zlog::DEBUG if opts[:debug]

class FileViewer
  include MimeHelpers

  # contains the result of parsing commandline arguments
  attr :args

  # parse arguments
  def initialize(opts)
    @opts = opts
    parseArgs
  end

  # run a given file
  # e.g. for "vid.mkv" execute "mplayer vid.mkv"
  def run( file )
    mime = getMime file
    ( Zlog.error "couldn't determine mime-type for file #{file}"
      return nil ) if mime.nil? or mime.empty?
    Zlog.info "got mime '#{mime}' for #{file}"
    
    runner = getRunner mime, file, @args
    ( Zlog.error "couldn't find a runner for #{mime}"
      return nil ) if runner.nil? or runner.empty?
    Zlog.info "got runner '#{runner}' for #{file}"

    exec = fillRunnerArgs runner, file, @args
    Zlog.info "run: #{exec}"
    `#{exec}` if not @opts[:pretend]
  end

  # run all files that were given as arguments
  def runAll
    @args["files"].each{|f| run f }
  end

  private

  def parseArgs
    def getArgs(&f)
      ARGV.map{|a|
        f.call(a)
      }.compact
    end

    @args = {
      "icon"    => "",
      "caption" => "v",
      "db"      => [],
      "factor"  => [],
      "files"   => []
    }
    
    @args["files"] = getArgs{ |c|
      cf = File.expand_path(c)
      File.exists?( cf ) ? cf : nil 
    }

    @args["db"] = getArgs{ |c|
      m = /^([+-][0-9]+)db$/i.match(c)
      m == nil ? nil : m[1]
    }

    @args["factor"] = getArgs{ |c|
      m = /^([0-9]+[.][0-9]+)x$/i.match(c)
      m == nil ? nil : m[1]
    }

    @args["files"] = ["."] if @args["files"].empty?
  end

end

FileViewer.new(opts).runAll